//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BODYSHPDAL.DbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BSSDBEntities : DbContext
    {
        public BSSDBEntities()
            : base("name=BSSDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblAccount> TblAccounts { get; set; }
        public virtual DbSet<TblEmployee> TblEmployees { get; set; }
        public virtual DbSet<TblUser> TblUsers { get; set; }
        public virtual DbSet<TblVehicle> TblVehicles { get; set; }
        public virtual DbSet<tblContractorMaster> tblContractorMasters { get; set; }
        public virtual DbSet<TblEmailMaster> TblEmailMasters { get; set; }
        public virtual DbSet<TblStatu> TblStatus { get; set; }
        public virtual DbSet<Tbl_InsuranceCmpMaster> Tbl_InsuranceCmpMaster { get; set; }
        public virtual DbSet<TblPhotoDtl> TblPhotoDtls { get; set; }
        public virtual DbSet<TblJobCardDtl> TblJobCardDtls { get; set; }
        public virtual DbSet<TblJobCardHdr> TblJobCardHdrs { get; set; }
        public virtual DbSet<tblBrand> tblBrands { get; set; }
        public virtual DbSet<TblDealer> TblDealers { get; set; }
        public virtual DbSet<TblDesignation> TblDesignations { get; set; }
    
        public virtual ObjectResult<SP_ContractorWiseReport_Result> SP_ContractorWiseReport(Nullable<long> dealerID, Nullable<long> accountID)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ContractorWiseReport_Result>("SP_ContractorWiseReport", dealerIDParameter, accountIDParameter);
        }
    
        public virtual ObjectResult<SpContractorWiseDtl_Result> SpContractorWiseDtl(Nullable<long> contractorId, Nullable<long> dealerID, Nullable<long> accountId)
        {
            var contractorIdParameter = contractorId.HasValue ?
                new ObjectParameter("ContractorId", contractorId) :
                new ObjectParameter("ContractorId", typeof(long));
    
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpContractorWiseDtl_Result>("SpContractorWiseDtl", contractorIdParameter, dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpDeliveredCount(Nullable<long> dealerID, Nullable<long> accountID)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpDeliveredCount", dealerIDParameter, accountIDParameter);
        }
    
        public virtual ObjectResult<spGetBodyShopData_Result> spGetBodyShopData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBodyShopData_Result>("spGetBodyShopData");
        }
    
        public virtual ObjectResult<spGetBrandList_Result> spGetBrandList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBrandList_Result>("spGetBrandList");
        }
    
        public virtual ObjectResult<SpGetCompleteDetails_Result> SpGetCompleteDetails(Nullable<long> dealerID, Nullable<long> accountID)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCompleteDetails_Result>("SpGetCompleteDetails", dealerIDParameter, accountIDParameter);
        }
    
        public virtual ObjectResult<SpGetDateWiseDetails_Result> SpGetDateWiseDetails(Nullable<System.DateTime> startdate, Nullable<System.DateTime> endDate, Nullable<long> dealerID, Nullable<long> accountId)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDateWiseDetails_Result>("SpGetDateWiseDetails", startdateParameter, endDateParameter, dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SpGetStatus_Result> SpGetStatus(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetStatus_Result>("SpGetStatus", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<spGetStatusDetails_Result> spGetStatusDetails(Nullable<long> jobCardId)
        {
            var jobCardIdParameter = jobCardId.HasValue ?
                new ObjectParameter("JobCardId", jobCardId) :
                new ObjectParameter("JobCardId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStatusDetails_Result>("spGetStatusDetails", jobCardIdParameter);
        }
    
        public virtual ObjectResult<spGetStatusPopUpDetails_Result> spGetStatusPopUpDetails(Nullable<long> jobCardId)
        {
            var jobCardIdParameter = jobCardId.HasValue ?
                new ObjectParameter("JobCardId", jobCardId) :
                new ObjectParameter("JobCardId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStatusPopUpDetails_Result>("spGetStatusPopUpDetails", jobCardIdParameter);
        }
    
        public virtual ObjectResult<SpGetStatusReadyDeliver_Result> SpGetStatusReadyDeliver(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetStatusReadyDeliver_Result>("SpGetStatusReadyDeliver", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpPendingCount(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpPendingCount", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpReadyCount(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpReadyCount", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SpReadyForDeliver_Result> SpReadyForDeliver(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReadyForDeliver_Result>("SpReadyForDeliver", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SpStatusWiseDtl_Result> SpStatusWiseDtl(Nullable<long> statusID, Nullable<long> dealerID, Nullable<long> accountId)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(long));
    
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpStatusWiseDtl_Result>("SpStatusWiseDtl", statusIDParameter, dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpTotalCount(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpTotalCount", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GetEmailList_Result> SP_GetEmailList(Nullable<long> dealerID, Nullable<long> accountId)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmailList_Result>("SP_GetEmailList", dealerIDParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SP_StatusWiseCompleteReport_Result> SP_StatusWiseCompleteReport(Nullable<long> dealerID, Nullable<long> accountID)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StatusWiseCompleteReport_Result>("SP_StatusWiseCompleteReport", dealerIDParameter, accountIDParameter);
        }
    
        public virtual ObjectResult<SP_GetInsuranceCmpList_Result> SP_GetInsuranceCmpList(Nullable<long> dealerId, Nullable<long> accountId)
        {
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetInsuranceCmpList_Result>("SP_GetInsuranceCmpList", dealerIdParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SP_ConsolidatedReport_Result> SP_ConsolidatedReport(Nullable<int> dealerId, Nullable<int> accountID, Nullable<int> days)
        {
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsolidatedReport_Result>("SP_ConsolidatedReport", dealerIdParameter, accountIDParameter, daysParameter);
        }
    
        public virtual ObjectResult<sp_GetDetailForJobcard_Result> sp_GetDetailForJobcard(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetailForJobcard_Result>("sp_GetDetailForJobcard", jobCardNoParameter);
        }
    
        public virtual ObjectResult<sp_ModelAndFuelTypeStatus_Result> sp_ModelAndFuelTypeStatus(Nullable<long> dealerID, Nullable<long> accountID, Nullable<int> month, Nullable<int> year)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ModelAndFuelTypeStatus_Result>("sp_ModelAndFuelTypeStatus", dealerIDParameter, accountIDParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_PanelWiseStatus_Result> sp_PanelWiseStatus(Nullable<long> dealerID, Nullable<long> accountID, Nullable<int> month, Nullable<int> year)
        {
            var dealerIDParameter = dealerID.HasValue ?
                new ObjectParameter("DealerID", dealerID) :
                new ObjectParameter("DealerID", typeof(long));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PanelWiseStatus_Result>("sp_PanelWiseStatus", dealerIDParameter, accountIDParameter, monthParameter, yearParameter);
        }
    }
}
